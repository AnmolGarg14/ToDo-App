{"ast":null,"code":"var _jsxFileName = \"E:\\\\Major Project\\\\To-Do Application\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport { addToDo, getAllToDo, updateToDo } from \"./utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [isUpdating, setUpdating] = useState(false);\n  const [toDoId, setToDoId] = useState(\"\");\n  useEffect(() => {\n    getAllToDo(setToDo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add ToDos...\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add\",\n          onClick: isUpdating ? () => updateToDo() : () => addToDo(text, setText, setToDo),\n          children: isUpdating ? \"Update\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: toDo.map(item => /*#__PURE__*/_jsxDEV(ToDo, {\n          text: item.text\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RR7EveirK4S6BevgJZ+Wevv9TYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ToDo","addToDo","getAllToDo","updateToDo","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","text","setText","isUpdating","setUpdating","toDoId","setToDoId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","item","_id","_c","$RefreshReg$"],"sources":["E:/Major Project/To-Do Application/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport { addToDo, getAllToDo, updateToDo } from \"./utils/api\";\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [isUpdating, setUpdating] = useState(false);\n  const [toDoId, setToDoId] = useState(\"\");\n\n  useEffect(() => {\n    getAllToDo(setToDo);\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>TODO APP</h1>\n        <div className=\"top\">\n          <input\n            type=\"text\"\n            placeholder=\"Add ToDos...\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <div\n            className=\"add\"\n            onClick={\n              isUpdating\n                ? () => updateToDo()\n                : () => addToDo(text, setText, setToDo)\n            }\n          >\n            {isUpdating ? \"Update\" : \"Add\"}\n          </div>\n        </div>\n        <div className=\"list\">\n          {toDo.map((item) => (\n            <ToDo key={item._id} text={item.text} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,UAAU,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdI,UAAU,CAACO,OAAO,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEJ,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBZ,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBZ,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAKW,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBZ,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BC,KAAK,EAAEd,IAAK;UACZe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACFhB,OAAA;UACEW,SAAS,EAAC,KAAK;UACfY,OAAO,EACLhB,UAAU,GACN,MAAMT,UAAU,CAAC,CAAC,GAClB,MAAMF,OAAO,CAACS,IAAI,EAAEC,OAAO,EAAEF,OAAO,CACzC;UAAAQ,QAAA,EAEAL,UAAU,GAAG,QAAQ,GAAG;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNhB,OAAA;QAAKW,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClBT,IAAI,CAACqB,GAAG,CAAEC,IAAI,iBACbzB,OAAA,CAACL,IAAI;UAAgBU,IAAI,EAAEoB,IAAI,CAACpB;QAAK,GAA1BoB,IAAI,CAACC,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAvCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}